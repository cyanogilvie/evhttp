/* Generated by re2c 2.2 on Sun Nov 28 22:09:54 2021 */

enum hdr {
	HDR_HOST,
	HDR_CONTENT_LENGTH,
	HDR_CONTENT_TYPE,
	HDR_TRANSFER_ENCODING,
	HDR_TE,
	HDR_SET_COOKIE,
	HDR_COOKIE,
	HDR_CONNECTION,
	HDR_UPGRADE,
	HDR_USER_AGENT,

	HDR_OTHER					// field_name_str holds the header name, must be last
};

struct header {
	struct dlist_elem	dl;
	struct header*		type_next;		// Next header of the same name
	enum hdr			field_name;
	unsigned char*		field_name_str;			// Both of these are only valid
	int					field_name_str_len;		// if field_name == HDR_OTHER
	union {
		unsigned char*	str;
		int64_t			integer;
		void*			ptr;		// If used, must not require explicit free (eg. pointer to obstack managed in c->ob is ok)
	} field_value;
};

#define HEADERS_HASH_BUCKETS	32
struct headers {
	struct dlist		dl;
	struct header*		first[HDR_OTHER];	// pointer to the first instance of HDR_$foo
	struct header*		last[HDR_OTHER];	// pointer to the last instance of HDR_$foo
	uint32_t			hash_seed;
	struct dlist		hash_buckets[HEADERS_HASH_BUCKETS];
};

int serialize_headers(struct obstack* ob, struct headers* headers);
void append_header(struct headers* headers, struct header* h);
void remove_header(struct headers* headers, struct header* h);
struct header* new_header(struct obstack* ob);
struct header* last_header(struct headers* headers, enum hdr hdr);
void init_headers(struct headers* headers);

